# Properties

# ===================================
# axxess.mode = aca | ac | ca
# There are 3 modes:
#
# 1. access-db -> csv -> access-db
# 2. access-db -> csv
# 3.              csv -> access-db
#
# 1. (aca) converts access databases to csv and the csv again to an access database(s) (in another version).
# 2. (ac)  converts access databases to csv.
# 3. (ca)  converts csv to access database(s).
axxess.mode=aca

# ===================================
# db.source.file = {directory} | {file}
#
# if given a directory will walk directory structure recursively and convert all access databases found.
# if given a file and the file points to an access database wil convert this file.
db.source.file=example

# ===================================
# db.source.force.encoding = {empty} | {Canonical Name for java.nio API}
#
# Encoding of access database files after 2000 is (most likely) UTF-16LE. access '97 (V1997) encoding is not
# properly detected so Axxess enforces ISO8859-1. If you think your database has another encoding put the
# encoding name here. Leave empty if in doubt.
# See also: https://docs.oracle.com/javase/8/docs/technotes/guides/intl/encoding.doc.html
db.source.force.encoding=

# ===================================
# csv.target.encoding = {empty} | {Canonical Name for java.nio API}
#
# Encoding of the produced csv-files. Default is UTF-8. Leave empty for default.
csv.target.encoding=

# ===================================
# csv.target.format = {empty} | Default | Excel | InformixUnload | InformixUnloadCsv | MySQL | PostgreSQLCsv | PostgreSQLText | RFC4180 | TDF
#
# The CSV format of the produced csv-files. Default is RFC4180. Leave empty for default.
# See also: https://commons.apache.org/proper/commons-csv/apidocs/org/apache/commons/csv/CSVFormat.html
csv.target.format=

# ===================================
# include.manifest = true | false
#
# Include a manifest.txt file with SHA1 checksums of produced files.
include.manifest=true

# ===================================
# create.zip = true | false
#
# Create a zip file with produced files.
create.zip=false

# ===================================
# compress.zip = true | false
#
# Compress a produced zip-file.
compress.zip=false

# ===================================
# csv.target.directory = {directory} | {empty}
# default = axxess-csv-out
#
# Output directory for csv-files
csv.target.directory=example

