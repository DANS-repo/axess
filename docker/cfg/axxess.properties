# Properties

# ===================================
# axxess.mode = aca | ac | ca
# There are 3 modes:
#
# 1. access-db -> csv -> access-db
# 2. access-db -> csv
# 3.              csv -> access-db
#
# 1. (aca) convert access databases to csv and the csv again to an access database(s) (in another version).
# 2. (ac)  convert access databases to csv.
# 3. (ca)  convert csv to access database(s).
axxess.mode=aca

#########################################
# Properties for access to csv conversion
#########################################

# ===================================
# db.source.file = {directory} | {file}
#
# if given a directory will walk directory structure recursively and convert all access databases found.
# if given a file and the file points to an access database wil convert this file.
db.source.file=/Users/ecco/git/axxess/src/test/resources

# ===================================
# db.force.source.encoding = {empty} | {Canonical Name for java.nio API}
#
# Encoding of access database files after 2000 is (most likely) UTF-16LE. access '97 (V1997) encoding is not
# properly detected so Axxess enforces ISO8859-1. If you think your database has another encoding put the
# encoding name here. Leave empty if in doubt.
# See also: https://docs.oracle.com/javase/8/docs/technotes/guides/intl/encoding.doc.html
db.force.source.encoding=

# ===================================
# csv.target.encoding = {empty} | {Canonical Name for java.nio API}
# Default: UTF-8.
#
# Encoding of the target csv files. Leave empty for default.
csv.target.encoding=

# ===================================
# csv.target.csvformat = {empty} | Default | Excel | InformixUnload | InformixUnloadCsv | MySQL | PostgreSQLCsv | PostgreSQLText | RFC4180 | TDF
# Default: RFC4180.
#
# The CSV format of the target csv files. Leave empty for default.
# See also: https://commons.apache.org/proper/commons-csv/apidocs/org/apache/commons/csv/CSVFormat.html
csv.target.csvformat=

# ===================================
# csv.target.manifest = true | false
# Default: true
#
# Include a manifest-sha1.txt file with SHA1 checksums of target files.
csv.target.manifest=

# ===================================
# create.zip = true | false
# Default: false
#
# Create a zip file with target files.
create.zip=

# ===================================
# compress.zip = true | false
# Default: false
#
# If create zip, compress the target files.
compress.zip=

# ===================================
# csv.target.directory = {directory} | {empty}
# Default: axxess-csv-out
#
# Output directory for csv files.
csv.target.directory=/Users/ecco/tmp

#########################################
# Properties for csv to access conversion
#########################################

# ===================================
# csv.source.file = {directory} | {file} | {empty}
# Default = {csv.target.directory}
#
# if given a directory will walk directory structure recursively and convert all *._metadata.csv files found.
# if given a file and the file points to a *._metadata.csv file wil convert this file.
# if left empty and axxess.mode=aca will take {csv.target.directory}
csv.source.file=

# ===================================
# csv.source.encoding = {empty} | {Canonical Name for java.nio API}
# Default: {csv.target.encoding}
#
# Encoding of the source csv files. Leave empty for default.
csv.source.encoding=

# ===================================
# csv.source.csvformat = {empty} | Default | Excel | InformixUnload | InformixUnloadCsv | MySQL | PostgreSQLCsv | PostgreSQLText | RFC4180 | TDF
# Default: {csv.target.csvformat}
#
csv.source.csvformat=

# ===================================
# db.target.database.format = {empty} | V2000 | V2003 | V2007 | V2010 | V2016
# Default: V2010
#
db.target.database.format=

# ===================================
# db.target.autonumber.columns = true | false
# Default: false
#
# Let auto number columns in the new database perform autonomously. (Renumbers records.)
# If set to 'true' data in the new database may differ from data in the original database and it can corrupt
# relational integrity. Leave empty or set to 'false' when in doubt.
db.target.autonumber.columns=

# ===================================
# db.target.include.indexes = true | false
# Default: true
#
# If you run into a com.healthmarketscience.jackcess.ConstraintViolationException it might help to set
# include indexes to false. As a consequence db.target.include.relationships will also be set to false.
db.target.include.indexes=

# ===================================
# db.target.include.relationships = true | false
# Default: true
#
# Mind: relationships cannot be included without including indexes.
db.target.include.relationships=

# ===================================
# db.target.manifest = true | false
# Default: true
#
db.target.manifest=

# ===================================
# db.target.directory = {directory} | {empty}
# Default = axxess-db-out
#
# Output directory for database files.
db.target.directory=/Users/ecco/tmp

